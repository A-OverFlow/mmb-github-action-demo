name: CI/CD for Java Project

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [dev, main]

jobs:
  build:
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

  set-environment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Set environment variable
        id: set-env
        run: |
          echo ${{ github.base_ref }}
          echo "environment=dev" >> $GITHUB_OUTPUT
          if [[ ${{ github.base_ref }} == "main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT 
          fi
      - name: Check environment
        run: echo ${{ steps.set-env.outputs.environment }}

  image-build:
    runs-on: ubuntu-latest
    needs: [set-environment]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t myeongseob91/github_action_demo:${{ github.sha }} .

      - name: Push Docker image
        run: docker push myeongseob91/github_action_demo:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [set-environment, image-build]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker pull myeongseob91/github_action_demo:${{ github.sha }}
            sudo docker stop app || true
            sudo docker rm app || true
            sudo docker run -d --name app -p 9090:9091 myeongseob91/github_action_demo:${{ github.sha }}
